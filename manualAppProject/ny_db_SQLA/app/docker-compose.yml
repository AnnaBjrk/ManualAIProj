version: '3.8'
services:
  # If you're using RDS in production, you might want to keep this for local development
  # db:
  #   image: postgres:16
  #   container_name: postgres_db_man
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/dbmanualweb
  #   restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ManualApi_app
    environment:
      # Database connection
      DB_URL: ${DB_URL}
      # For direct connection to container DB
      #POSTGRES_USER: ${POSTGRES_USER}
      #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #POSTGRES_DB: ${POSTGRES_DB}
      #DB_HOST: ${DB_HOST:-db}

      # AWS credentials
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET: ${S3_BUCKET}

      # App configuration
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      STORAGE_MODE: ${STORAGE_MODE}
      LOCAL_UPLOAD_FOLDER: ${LOCAL_UPLOAD_FOLDER}

      # Mistral API
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
    env_file:
      - .env
      #depends_on:
      #- db
    ports:
      - "8000:8000"
    command: >
      sh -c "sleep 10 && cd app && python setup.py && uvicorn main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
